[{"/Users/selome/senior project/Media-Accesiblity/src/index.js":"1","/Users/selome/senior project/Media-Accesiblity/src/reportWebVitals.js":"2","/Users/selome/senior project/Media-Accesiblity/src/App.js":"3","/Users/selome/senior project/Media-Accesiblity/src/newPhotosPopup.js":"4","/Users/selome/senior project/Media-Accesiblity/src/textInput.js":"5"},{"size":500,"mtime":1635735614453,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1635735614454,"results":"8","hashOfConfig":"7"},{"size":871,"mtime":1635748132451,"results":"9","hashOfConfig":"7"},{"size":814,"mtime":1635735614454,"results":"10","hashOfConfig":"7"},{"size":890,"mtime":1635735614455,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ef2csd",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/Users/selome/senior project/Media-Accesiblity/src/index.js",[],["26","27"],"/Users/selome/senior project/Media-Accesiblity/src/reportWebVitals.js",[],"/Users/selome/senior project/Media-Accesiblity/src/App.js",["28","29"],"import \"./App.css\";\nimport  {AppView}  from \"./newPhotosPopup.js\";\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {ImageTextInput,ImageTextInputMultiline} from \"./textInput\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  \n  return (\n    \n    <div className=\"App\">\n      \n\n      <header className=\"App-header\">\n        \n        <ImageTextInputMultiline />\n        <Container className=\"mt-3\">\n          <Row>\n            <Col>\n              <Button variant='danger'> Cancel </Button>\n            </Col>\n            <Col>\n              <Button variant='primary'> Submit </Button>\n            </Col>\n          </Row>\n          \n        </Container>\n        \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/selome/senior project/Media-Accesiblity/src/newPhotosPopup.js",["30","31","32"],"import React, { useState } from \"react\";\nimport { View, StyleSheet, Button, Alert } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1, \n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n});\n\nconst App = () => {\n  const newPhotosPopup = () =>\n  Alert.alert(\n    \"Media Accessibility\",\n    \" You have new photos added, would you like to add a caption?\",\n    [\n      {\n        text: \"Dictate\",\n        onPress: () => console.log(\"Dictate pressed\"),\n      },\n      {\n        text: \"Type\",\n        onPress: () => console.log(\"Type Pressed\"),\n        style: \"cancel\",\n      },\n      { text: \"Later\", onPress: () => console.log(\"Later Pressed\") },\n    ]\n  );\n\n  return (\n    <View style={styles.container}>\n      <newPhotosPopup/>\n    </View>\n  );\n}\n\nexport default App;","/Users/selome/senior project/Media-Accesiblity/src/textInput.js",["33"],"import React from 'react';\nimport { View, TextInput, Alert } from 'react-native';\n\nexport const ImageTextInput = (props) => {\n  return (\n    <TextInput\n      {...props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n      editable\n      maxLength={125}\n    />\n  );\n}\n\nexport const ImageTextInputMultiline = () => {\n  const [value, onChangeText] = React.useState('Image Description: Tell us about the image...');\n\n  // If you type something in the text box that is a color, the background will change to that\n  // color.\n  return (\n    <View\n      style={{\n        backgroundColor: value,\n        borderBottomColor: '#000000',\n        borderBottomWidth: 1,\n      }}>\n      <ImageTextInput\n        multiline\n        numberOfLines={4}\n        onChangeText={text => onChangeText(text)}\n        value={value}\n        style={{padding: 10}}\n      />\n    </View>\n  );\n}\n\n\n\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":17},{"ruleId":"38","severity":1,"message":"42","line":7,"column":9,"nodeType":"40","messageId":"41","endLine":7,"endColumn":23},{"ruleId":"38","severity":1,"message":"43","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"44","line":2,"column":28,"nodeType":"40","messageId":"41","endLine":2,"endColumn":34},{"ruleId":"38","severity":1,"message":"45","line":13,"column":9,"nodeType":"40","messageId":"41","endLine":13,"endColumn":23},{"ruleId":"38","severity":1,"message":"46","line":2,"column":27,"nodeType":"40","messageId":"41","endLine":2,"endColumn":32},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'AppView' is defined but never used.","Identifier","unusedVar","'ImageTextInput' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'newPhotosPopup' is assigned a value but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]